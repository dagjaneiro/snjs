{"code":"import * as tslib_1 from \"tslib\";\r\nimport map from 'lodash/map';\r\nimport find from 'lodash/find';\r\nimport pull from 'lodash/pull';\r\nimport remove from 'lodash/remove';\r\nimport { SFItem } from 'standard-file-js/lib/app/models/item';\r\nvar SNEditor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SNEditor, _super);\r\n    function SNEditor(json_obj) {\r\n        var _this = _super.call(this, json_obj) || this;\r\n        if (!_this.notes) {\r\n            _this.notes = [];\r\n        }\r\n        if (!_this.data) {\r\n            _this.data = {};\r\n        }\r\n        return _this;\r\n    }\r\n    SNEditor.prototype.mapContentToLocalProperties = function (content) {\r\n        _super.prototype.mapContentToLocalProperties.call(this, content);\r\n        this.url = content.url;\r\n        this.name = content.name;\r\n        this.data = content.data || {};\r\n        this.default = content.default;\r\n        this.systemEditor = content.systemEditor;\r\n    };\r\n    SNEditor.prototype.structureParams = function () {\r\n        var params = {\r\n            url: this.url,\r\n            name: this.name,\r\n            data: this.data,\r\n            default: this.default,\r\n            systemEditor: this.systemEditor\r\n        };\r\n        var superParams = _super.prototype.structureParams.call(this);\r\n        Object.assign(superParams, params);\r\n        return superParams;\r\n    };\r\n    SNEditor.prototype.referenceParams = function () {\r\n        var references = map(this.notes, function (note) {\r\n            return { uuid: note.uuid, content_type: note.content_type };\r\n        });\r\n        return references;\r\n    };\r\n    SNEditor.prototype.addItemAsRelationship = function (item) {\r\n        if (item.content_type == 'Note') {\r\n            if (!find(this.notes, item)) {\r\n                this.notes.push(item);\r\n            }\r\n        }\r\n        _super.prototype.addItemAsRelationship.call(this, item);\r\n    };\r\n    SNEditor.prototype.removeItemAsRelationship = function (item) {\r\n        if (item.content_type == 'Note') {\r\n            pull(this.notes, item);\r\n        }\r\n        _super.prototype.removeItemAsRelationship.call(this, item);\r\n    };\r\n    SNEditor.prototype.removeAndDirtyAllRelationships = function () {\r\n        _super.prototype.removeAndDirtyAllRelationships.call(this);\r\n        this.notes = [];\r\n    };\r\n    SNEditor.prototype.removeReferencesNotPresentIn = function (references) {\r\n        var _this = this;\r\n        _super.prototype.removeReferencesNotPresentIn.call(this, references);\r\n        var uuids = references.map(function (ref) {\r\n            return ref.uuid;\r\n        });\r\n        this.notes.forEach(function (note) {\r\n            if (!uuids.includes(note.uuid)) {\r\n                remove(_this.notes, { uuid: note.uuid });\r\n            }\r\n        });\r\n    };\r\n    SNEditor.prototype.potentialItemOfInterestHasChangedItsUUID = function (newItem, oldUUID, newUUID) {\r\n        if (newItem.content_type === 'Note' &&\r\n            find(this.notes, { uuid: oldUUID })) {\r\n            remove(this.notes, { uuid: oldUUID });\r\n            this.notes.push(newItem);\r\n        }\r\n    };\r\n    Object.defineProperty(SNEditor.prototype, \"content_type\", {\r\n        get: function () {\r\n            return 'SN|Editor';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SNEditor.prototype.setData = function (key, value) {\r\n        var dataHasChanged = JSON.stringify(this.data[key]) !== JSON.stringify(value);\r\n        if (dataHasChanged) {\r\n            this.data[key] = value;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SNEditor.prototype.dataForKey = function (key) {\r\n        return this.data[key] || {};\r\n    };\r\n    return SNEditor;\r\n}(SFItem));\r\nexport { SNEditor };\r\n//# sourceMappingURL=editor.js.map","references":["/Users/daj/personal/projects/standard-notes/snjs/node_modules/@types/lodash/ts3.1/map.d.ts","/Users/daj/personal/projects/standard-notes/snjs/node_modules/@types/lodash/ts3.1/find.d.ts","/Users/daj/personal/projects/standard-notes/snjs/node_modules/@types/lodash/ts3.1/pull.d.ts","/Users/daj/personal/projects/standard-notes/snjs/node_modules/@types/lodash/ts3.1/remove.d.ts","/Users/daj/personal/projects/standard-notes/snjs/node_modules/standard-file-js/lib/app/models/item.js"],"map":"{\"version\":3,\"file\":\"editor.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../lib/models/app/editor.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/daj/personal/projects/standard-notes/snjs/dist/types/models/app/editor.d.ts","writeByteOrderMark":false,"text":"import { SFItem } from 'standard-file-js/lib/app/models/item';\r\nexport declare class SNEditor extends SFItem {\r\n    notes: any;\r\n    data: any;\r\n    url: any;\r\n    name: any;\r\n    default: any;\r\n    systemEditor: any;\r\n    constructor(json_obj: any);\r\n    mapContentToLocalProperties(content: any): void;\r\n    structureParams(): any;\r\n    referenceParams(): {\r\n        uuid: any;\r\n        content_type: any;\r\n    }[];\r\n    addItemAsRelationship(item: any): void;\r\n    removeItemAsRelationship(item: any): void;\r\n    removeAndDirtyAllRelationships(): void;\r\n    removeReferencesNotPresentIn(references: any): void;\r\n    potentialItemOfInterestHasChangedItsUUID(newItem: any, oldUUID: any, newUUID: any): void;\r\n    readonly content_type: string;\r\n    setData(key: any, value: any): boolean;\r\n    dataForKey(key: any): any;\r\n}\r\n"}}
